/* A Bison parser, made by GNU Bison 2.3.  */

/* Skeleton interface for Bison's Yacc-like parsers in C

   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
   Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin Street, Fifth Floor,
   Boston, MA 02110-1301, USA.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* Tokens.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
   /* Put the tokens into the symbol table, so that GDB and other debuggers
      know about them.  */
   enum yytokentype {
     ECS_NULL = 258,
     ASC_SOH = 259,
     ASC_STX = 260,
     ASC_ETX = 261,
     ASC_EOT = 262,
     ASC_ENQ = 263,
     ASC_ACK = 264,
     ECS_ALERT = 265,
     ECS_BACKSPACE = 266,
     BCS_WHTSP_TAB = 267,
     BCS_WHTSP_NEWLINE = 268,
     BCS_WHTSP_VERTICAL_TAB = 269,
     BCS_WHTSP_FORMFEED = 270,
     ECS_CARRIAGE_RETURN = 271,
     ASC_SHIFT_OUT = 272,
     ASC_SHIFT_IN = 273,
     ASC_DLE = 274,
     ASC_DC1 = 275,
     ASC_DC2 = 276,
     ASC_DC3 = 277,
     ASC_DC4 = 278,
     ASC_NAK = 279,
     ASC_SYN = 280,
     ASC_ETB = 281,
     ASC_CAN = 282,
     ASC_EM = 283,
     ASC_SUB = 284,
     ASC_ESC = 285,
     ASC_IS4 = 286,
     ASC_IS3 = 287,
     ASC_IS2 = 288,
     ASC_IS1 = 289,
     BCS_WHTSP_SPACE = 290,
     BCS_PUNCT_EXCLAMATION = 291,
     BCS_PUNCT_QUOTE = 292,
     BCS_PUNCT_HASH = 293,
     ASC_DOLLAR_SIGN = 294,
     BCS_PUNCT_PERCENT = 295,
     BCS_PUNCT_AMPERSAND = 296,
     BCS_PUNCT_APOSTROPHE = 297,
     BCS_PUNCT_OPEN_PARENTHESIS = 298,
     BCS_PUNCT_CLOSE_PARENTHESIS = 299,
     BCS_PUNCT_ASTERISK = 300,
     BCS_PUNCT_PLUS = 301,
     BCS_PUNCT_COMMA = 302,
     BCS_PUNCT_MINUS = 303,
     BCS_PUNCT_PERIOD = 304,
     BCS_PUNCT_SLASH = 305,
     BCS_DIGIT_0 = 306,
     BCS_DIGIT_1 = 307,
     BCS_DIGIT_2 = 308,
     BCS_DIGIT_3 = 309,
     BCS_DIGIT_4 = 310,
     BCS_DIGIT_5 = 311,
     BCS_DIGIT_6 = 312,
     BCS_DIGIT_7 = 313,
     BCS_DIGIT_8 = 314,
     BCS_DIGIT_9 = 315,
     BCS_PUNCT_COLON = 316,
     BCS_PUNCT_SEMICOLON = 317,
     BCS_PUNCT_LESS_THAN = 318,
     BCS_PUNCT_EQUAL = 319,
     BCS_PUNCT_GREATER_THAN = 320,
     BCS_PUNCT_QUESTION = 321,
     ASC_AT_SIGN = 322,
     BCS_UPPER_A = 323,
     BCS_UPPER_B = 324,
     BCS_UPPER_C = 325,
     BCS_UPPER_D = 326,
     BCS_UPPER_E = 327,
     BCS_UPPER_F = 328,
     BCS_UPPER_G = 329,
     BCS_UPPER_H = 330,
     BCS_UPPER_I = 331,
     BCS_UPPER_J = 332,
     BCS_UPPER_K = 333,
     BCS_UPPER_L = 334,
     BCS_UPPER_M = 335,
     BCS_UPPER_N = 336,
     BCS_UPPER_O = 337,
     BCS_UPPER_P = 338,
     BCS_UPPER_Q = 339,
     BCS_UPPER_R = 340,
     BCS_UPPER_S = 341,
     BCS_UPPER_T = 342,
     BCS_UPPER_U = 343,
     BCS_UPPER_V = 344,
     BCS_UPPER_W = 345,
     BCS_UPPER_X = 346,
     BCS_UPPER_Y = 347,
     BCS_UPPER_Z = 348,
     BCS_PUNCT_OPEN_BRACKET = 349,
     BCS_PUNCT_BACKSLASH = 350,
     BCS_PUNCT_CLOSE_BRACKET = 351,
     BCS_PUNCT_CARET = 352,
     BCS_PUNCT_UNDERSCORE = 353,
     BCS_LOWER_A = 354,
     BCS_LOWER_B = 355,
     BCS_LOWER_C = 356,
     BCS_LOWER_D = 357,
     BCS_LOWER_E = 358,
     BCS_LOWER_F = 359,
     BCS_LOWER_G = 360,
     BCS_LOWER_H = 361,
     BCS_LOWER_I = 362,
     BCS_LOWER_J = 363,
     BCS_LOWER_K = 364,
     BCS_LOWER_L = 365,
     BCS_LOWER_M = 366,
     BCS_LOWER_N = 367,
     BCS_LOWER_O = 368,
     BCS_LOWER_P = 369,
     BCS_LOWER_Q = 370,
     BCS_LOWER_R = 371,
     BCS_LOWER_S = 372,
     BCS_LOWER_T = 373,
     BCS_LOWER_U = 374,
     BCS_LOWER_V = 375,
     BCS_LOWER_W = 376,
     BCS_LOWER_X = 377,
     BCS_LOWER_Y = 378,
     BCS_LOWER_Z = 379,
     BCS_PUNCT_OPEN_BRACE = 380,
     BCS_PUNCT_VERTICAL_BAR = 381,
     BCS_PUNCT_CLOSE_BRACE = 382,
     BCS_PUNCT_TILDE = 383,
     ASC_DEL = 384,
     ALT_PUNCT_OPEN_BRACE = 385,
     ALT_PUNCT_CLOSE_BRACE = 386,
     ALT_PUNCT_OPEN_BRACKET = 387,
     ALT_PUNCT_CLOSE_BRACKET = 388,
     ALT_PUNCT_HASH = 389,
     KWD_ASM = 390,
     KWD_AUTO = 391,
     KWD_BOOL = 392,
     KWD_BREAK = 393,
     KWD_CASE = 394,
     KWD_CATCH = 395,
     KWD_CHAR = 396,
     KWD_CLASS = 397,
     KWD_CONST = 398,
     KWD_CONST_CAST = 399,
     KWD_CONTINUE = 400,
     KWD_DEFAULT = 401,
     KWD_DEFINED = 402,
     KWD_DELETE = 403,
     KWD_DO = 404,
     KWD_DOUBLE = 405,
     KWD_DYNAMIC_CAST = 406,
     KWD_ELSE = 407,
     KWD_ENUM = 408,
     KWD_EXPLICIT = 409,
     KWD_EXPORT = 410,
     KWD_EXTERN = 411,
     KWD_FALSE = 412,
     KWD_FLOAT = 413,
     KWD_FOR = 414,
     KWD_FRIEND = 415,
     KWD_GOTO = 416,
     KWD_IF = 417,
     KWD_INLINE = 418,
     KWD_INT = 419,
     KWD_LONG = 420,
     KWD_MUTABLE = 421,
     KWD_NAMESPACE = 422,
     KWD_NEW = 423,
     KWD_OPERATOR = 424,
     KWD_PRIVATE = 425,
     KWD_PROTECTED = 426,
     KWD_PUBLIC = 427,
     KWD_REGISTER = 428,
     KWD_REINTERPRET_CAST = 429,
     KWD_RETURN = 430,
     KWD_SHORT = 431,
     KWD_SIGNED = 432,
     KWD_SIZEOF = 433,
     KWD_STATIC = 434,
     KWD_STATIC_CAST = 435,
     KWD_STRUCT = 436,
     KWD_SWITCH = 437,
     KWD_TEMPLATE = 438,
     KWD_THIS = 439,
     KWD_THROW = 440,
     KWD_TRUE = 441,
     KWD_TRY = 442,
     KWD_TYPEDEF = 443,
     KWD_TYPENAME = 444,
     KWD_TYPEID = 445,
     KWD_UNION = 446,
     KWD_UNSIGNED = 447,
     KWD_USING = 448,
     KWD_VIRTUAL = 449,
     KWD_VOID = 450,
     KWD_VOLATILE = 451,
     KWD_WCHAR_T = 452,
     KWD_WHILE = 453,
     PPD_NULL = 454,
     PPD_DEFINE = 455,
     PPD_ELIF = 456,
     PPD_ELSE = 457,
     PPD_ENDIF = 458,
     PPD_ERROR = 459,
     PPD_IF = 460,
     PPD_IFDEF = 461,
     PPD_IFNDEF = 462,
     PPD_INCLUDE = 463,
     PPD_LINE = 464,
     PPD_PRAGMA = 465,
     PPD_UNDEF = 466,
     OP_LOGICAL_NOT = 467,
     OP_NE = 468,
     OP_STRINGIZE = 469,
     OP_TOKEN_SPLICE = 470,
     OP_MODULO = 471,
     ALT_OP_TOKEN_SPLICE = 472,
     OP_ASSIGN_MODULO = 473,
     OP_BIT_AND = 474,
     OP_ADDRESS = 475,
     OP_LOGICAL_AND = 476,
     OP_ASSIGN_BIT_AND = 477,
     OP_DEREFERENCE = 478,
     OP_MULTIPLY = 479,
     OP_ASSIGN_MULTIPLY = 480,
     OP_PLUS = 481,
     OP_INCREMENT = 482,
     OP_ASSIGN_PLUS = 483,
     OP_MINUS = 484,
     OP_DECREMENT = 485,
     OP_ASSIGN_MINUS = 486,
     OP_POINTER_MEMBER = 487,
     OP_POINTER_POINTER_TO_MEMBER = 488,
     OP_OBJECT_MEMBER = 489,
     OP_OBJECT_POINTER_TO_MEMBER = 490,
     OP_DIVIDE = 491,
     OP_ASSIGN_DIVIDE = 492,
     OP_ELSE = 493,
     OP_SCOPE_REF = 494,
     OP_LT = 495,
     OP_SHIFT_LEFT = 496,
     OP_ASSIGN_SHIFT_LEFT = 497,
     OP_LE = 498,
     OP_ASSIGN = 499,
     OP_EQ = 500,
     OP_GT = 501,
     OP_GE = 502,
     OP_SHIFT_RIGHT = 503,
     OP_ASSIGN_SHIFT_RIGHT = 504,
     OP_CONDITIONAL = 505,
     OP_BIT_PLUS = 506,
     OP_ASSIGN_BIT_PLUS = 507,
     OP_BIT_OR = 508,
     OP_ASSIGN_BIT_OR = 509,
     OP_LOGICAL_OR = 510,
     OP_BIT_NOT = 511,
     OP_ALT_LOGICAL_AND = 512,
     OP_ALT_ASSIGN_BIT_AND = 513,
     OP_ALT_BIT_AND = 514,
     OP_ALT_BIT_OR = 515,
     OP_ALT_BIT_NOT = 516,
     OP_ALT_LOGICAL_NOT = 517,
     OP_ALT_NE = 518,
     OP_ALT_LOGICAL_OR = 519,
     OP_ALT_ASSIGN_BIT_OR = 520,
     OP_ALT_BIT_PLUS = 521,
     OP_ALT_ASSIGN_BIT_PLUS = 522,
     INV_ALT_LOGICAL_AND = 523,
     INV_ALT_ASSIGN_BIT_AND = 524,
     INV_ALT_BIT_AND = 525,
     INV_ALT_BIT_OR = 526,
     INV_ALT_BIT_NOT = 527,
     INV_ALT_LOGICAL_NOT = 528,
     INV_ALT_NE = 529,
     INV_ALT_LOGICAL_OR = 530,
     INV_ALT_ASSIGN_BIT_OR = 531,
     INV_ALT_BIT_PLUS = 532,
     INV_ALT_ASSIGN_BIT_PLUS = 533,
     INV_MFI_LOGICAL_AND = 534,
     INV_MFI_ASSIGN_BIT_AND = 535,
     INV_MFI_BIT_AND = 536,
     INV_MFI_BIT_OR = 537,
     INV_MFI_BIT_NOT = 538,
     INV_MFI_LOGICAL_NOT = 539,
     INV_MFI_NE = 540,
     INV_MFI_LOGICAL_OR = 541,
     INV_MFI_ASSIGN_BIT_OR = 542,
     INV_MFI_BIT_PLUS = 543,
     INV_MFI_ASSIGN_BIT_PLUS = 544,
     DECL_REFERENCE = 545,
     DECL_POINTER = 546,
     DECL_VAR_ARGS = 547,
     SYSTEM_HEADER_STRING = 548,
     HEADER_STRING = 549,
     IDENTIFIER = 550,
     NON_REPLACEABLE_IDENTIFIER = 551,
     MACRO_FUNCTION_IDENTIFIER = 552,
     MACRO_OBJECT_IDENTIFIER = 553,
     REPLACED_IDENTIFIER = 554,
     PP_NUMBER = 555,
     CHARACTER_LITERAL = 556,
     L_CHARACTER_LITERAL = 557,
     STRING_LITERAL = 558,
     L_STRING_LITERAL = 559,
     INTEGER_LITERAL = 560,
     OCTAL_LITERAL = 561,
     DECIMAL_LITERAL = 562,
     HEXADECIMAL_LITERAL = 563,
     FLOATING_LITERAL = 564,
     UNIVERSAL_CHARACTER_NAME = 565,
     USE_ON_CODE = 566,
     PUNC_INITIALIZE = 567,
     PUNC_SYNONYM = 568,
     DONT_CARE = 569,
     RESERVED_WORD = 570,
     ACCESS_SPECIFIER = 571,
     BOOLEAN_LITERAL = 572,
     CV_QUALIFIER = 573,
     INTRINSIC_TYPE = 574,
     FUNCTION_SPECIFIER = 575,
     STORAGE_CLASS_SPECIFIER = 576,
     USER_TOKEN = 577,
     SYMBOL = 578,
     COMMENT = 579,
     BLOCK_COMMENT = 580,
     END_OF_STATEMENT = 581,
     BLOCK_OPEN = 582,
     BLOCK_CLOSE = 583,
     LIST_OPEN = 584,
     LIST_SEPARATOR = 585,
     LIST_CLOSE = 586
   };
#endif
/* Tokens.  */
#define ECS_NULL 258
#define ASC_SOH 259
#define ASC_STX 260
#define ASC_ETX 261
#define ASC_EOT 262
#define ASC_ENQ 263
#define ASC_ACK 264
#define ECS_ALERT 265
#define ECS_BACKSPACE 266
#define BCS_WHTSP_TAB 267
#define BCS_WHTSP_NEWLINE 268
#define BCS_WHTSP_VERTICAL_TAB 269
#define BCS_WHTSP_FORMFEED 270
#define ECS_CARRIAGE_RETURN 271
#define ASC_SHIFT_OUT 272
#define ASC_SHIFT_IN 273
#define ASC_DLE 274
#define ASC_DC1 275
#define ASC_DC2 276
#define ASC_DC3 277
#define ASC_DC4 278
#define ASC_NAK 279
#define ASC_SYN 280
#define ASC_ETB 281
#define ASC_CAN 282
#define ASC_EM 283
#define ASC_SUB 284
#define ASC_ESC 285
#define ASC_IS4 286
#define ASC_IS3 287
#define ASC_IS2 288
#define ASC_IS1 289
#define BCS_WHTSP_SPACE 290
#define BCS_PUNCT_EXCLAMATION 291
#define BCS_PUNCT_QUOTE 292
#define BCS_PUNCT_HASH 293
#define ASC_DOLLAR_SIGN 294
#define BCS_PUNCT_PERCENT 295
#define BCS_PUNCT_AMPERSAND 296
#define BCS_PUNCT_APOSTROPHE 297
#define BCS_PUNCT_OPEN_PARENTHESIS 298
#define BCS_PUNCT_CLOSE_PARENTHESIS 299
#define BCS_PUNCT_ASTERISK 300
#define BCS_PUNCT_PLUS 301
#define BCS_PUNCT_COMMA 302
#define BCS_PUNCT_MINUS 303
#define BCS_PUNCT_PERIOD 304
#define BCS_PUNCT_SLASH 305
#define BCS_DIGIT_0 306
#define BCS_DIGIT_1 307
#define BCS_DIGIT_2 308
#define BCS_DIGIT_3 309
#define BCS_DIGIT_4 310
#define BCS_DIGIT_5 311
#define BCS_DIGIT_6 312
#define BCS_DIGIT_7 313
#define BCS_DIGIT_8 314
#define BCS_DIGIT_9 315
#define BCS_PUNCT_COLON 316
#define BCS_PUNCT_SEMICOLON 317
#define BCS_PUNCT_LESS_THAN 318
#define BCS_PUNCT_EQUAL 319
#define BCS_PUNCT_GREATER_THAN 320
#define BCS_PUNCT_QUESTION 321
#define ASC_AT_SIGN 322
#define BCS_UPPER_A 323
#define BCS_UPPER_B 324
#define BCS_UPPER_C 325
#define BCS_UPPER_D 326
#define BCS_UPPER_E 327
#define BCS_UPPER_F 328
#define BCS_UPPER_G 329
#define BCS_UPPER_H 330
#define BCS_UPPER_I 331
#define BCS_UPPER_J 332
#define BCS_UPPER_K 333
#define BCS_UPPER_L 334
#define BCS_UPPER_M 335
#define BCS_UPPER_N 336
#define BCS_UPPER_O 337
#define BCS_UPPER_P 338
#define BCS_UPPER_Q 339
#define BCS_UPPER_R 340
#define BCS_UPPER_S 341
#define BCS_UPPER_T 342
#define BCS_UPPER_U 343
#define BCS_UPPER_V 344
#define BCS_UPPER_W 345
#define BCS_UPPER_X 346
#define BCS_UPPER_Y 347
#define BCS_UPPER_Z 348
#define BCS_PUNCT_OPEN_BRACKET 349
#define BCS_PUNCT_BACKSLASH 350
#define BCS_PUNCT_CLOSE_BRACKET 351
#define BCS_PUNCT_CARET 352
#define BCS_PUNCT_UNDERSCORE 353
#define BCS_LOWER_A 354
#define BCS_LOWER_B 355
#define BCS_LOWER_C 356
#define BCS_LOWER_D 357
#define BCS_LOWER_E 358
#define BCS_LOWER_F 359
#define BCS_LOWER_G 360
#define BCS_LOWER_H 361
#define BCS_LOWER_I 362
#define BCS_LOWER_J 363
#define BCS_LOWER_K 364
#define BCS_LOWER_L 365
#define BCS_LOWER_M 366
#define BCS_LOWER_N 367
#define BCS_LOWER_O 368
#define BCS_LOWER_P 369
#define BCS_LOWER_Q 370
#define BCS_LOWER_R 371
#define BCS_LOWER_S 372
#define BCS_LOWER_T 373
#define BCS_LOWER_U 374
#define BCS_LOWER_V 375
#define BCS_LOWER_W 376
#define BCS_LOWER_X 377
#define BCS_LOWER_Y 378
#define BCS_LOWER_Z 379
#define BCS_PUNCT_OPEN_BRACE 380
#define BCS_PUNCT_VERTICAL_BAR 381
#define BCS_PUNCT_CLOSE_BRACE 382
#define BCS_PUNCT_TILDE 383
#define ASC_DEL 384
#define ALT_PUNCT_OPEN_BRACE 385
#define ALT_PUNCT_CLOSE_BRACE 386
#define ALT_PUNCT_OPEN_BRACKET 387
#define ALT_PUNCT_CLOSE_BRACKET 388
#define ALT_PUNCT_HASH 389
#define KWD_ASM 390
#define KWD_AUTO 391
#define KWD_BOOL 392
#define KWD_BREAK 393
#define KWD_CASE 394
#define KWD_CATCH 395
#define KWD_CHAR 396
#define KWD_CLASS 397
#define KWD_CONST 398
#define KWD_CONST_CAST 399
#define KWD_CONTINUE 400
#define KWD_DEFAULT 401
#define KWD_DEFINED 402
#define KWD_DELETE 403
#define KWD_DO 404
#define KWD_DOUBLE 405
#define KWD_DYNAMIC_CAST 406
#define KWD_ELSE 407
#define KWD_ENUM 408
#define KWD_EXPLICIT 409
#define KWD_EXPORT 410
#define KWD_EXTERN 411
#define KWD_FALSE 412
#define KWD_FLOAT 413
#define KWD_FOR 414
#define KWD_FRIEND 415
#define KWD_GOTO 416
#define KWD_IF 417
#define KWD_INLINE 418
#define KWD_INT 419
#define KWD_LONG 420
#define KWD_MUTABLE 421
#define KWD_NAMESPACE 422
#define KWD_NEW 423
#define KWD_OPERATOR 424
#define KWD_PRIVATE 425
#define KWD_PROTECTED 426
#define KWD_PUBLIC 427
#define KWD_REGISTER 428
#define KWD_REINTERPRET_CAST 429
#define KWD_RETURN 430
#define KWD_SHORT 431
#define KWD_SIGNED 432
#define KWD_SIZEOF 433
#define KWD_STATIC 434
#define KWD_STATIC_CAST 435
#define KWD_STRUCT 436
#define KWD_SWITCH 437
#define KWD_TEMPLATE 438
#define KWD_THIS 439
#define KWD_THROW 440
#define KWD_TRUE 441
#define KWD_TRY 442
#define KWD_TYPEDEF 443
#define KWD_TYPENAME 444
#define KWD_TYPEID 445
#define KWD_UNION 446
#define KWD_UNSIGNED 447
#define KWD_USING 448
#define KWD_VIRTUAL 449
#define KWD_VOID 450
#define KWD_VOLATILE 451
#define KWD_WCHAR_T 452
#define KWD_WHILE 453
#define PPD_NULL 454
#define PPD_DEFINE 455
#define PPD_ELIF 456
#define PPD_ELSE 457
#define PPD_ENDIF 458
#define PPD_ERROR 459
#define PPD_IF 460
#define PPD_IFDEF 461
#define PPD_IFNDEF 462
#define PPD_INCLUDE 463
#define PPD_LINE 464
#define PPD_PRAGMA 465
#define PPD_UNDEF 466
#define OP_LOGICAL_NOT 467
#define OP_NE 468
#define OP_STRINGIZE 469
#define OP_TOKEN_SPLICE 470
#define OP_MODULO 471
#define ALT_OP_TOKEN_SPLICE 472
#define OP_ASSIGN_MODULO 473
#define OP_BIT_AND 474
#define OP_ADDRESS 475
#define OP_LOGICAL_AND 476
#define OP_ASSIGN_BIT_AND 477
#define OP_DEREFERENCE 478
#define OP_MULTIPLY 479
#define OP_ASSIGN_MULTIPLY 480
#define OP_PLUS 481
#define OP_INCREMENT 482
#define OP_ASSIGN_PLUS 483
#define OP_MINUS 484
#define OP_DECREMENT 485
#define OP_ASSIGN_MINUS 486
#define OP_POINTER_MEMBER 487
#define OP_POINTER_POINTER_TO_MEMBER 488
#define OP_OBJECT_MEMBER 489
#define OP_OBJECT_POINTER_TO_MEMBER 490
#define OP_DIVIDE 491
#define OP_ASSIGN_DIVIDE 492
#define OP_ELSE 493
#define OP_SCOPE_REF 494
#define OP_LT 495
#define OP_SHIFT_LEFT 496
#define OP_ASSIGN_SHIFT_LEFT 497
#define OP_LE 498
#define OP_ASSIGN 499
#define OP_EQ 500
#define OP_GT 501
#define OP_GE 502
#define OP_SHIFT_RIGHT 503
#define OP_ASSIGN_SHIFT_RIGHT 504
#define OP_CONDITIONAL 505
#define OP_BIT_PLUS 506
#define OP_ASSIGN_BIT_PLUS 507
#define OP_BIT_OR 508
#define OP_ASSIGN_BIT_OR 509
#define OP_LOGICAL_OR 510
#define OP_BIT_NOT 511
#define OP_ALT_LOGICAL_AND 512
#define OP_ALT_ASSIGN_BIT_AND 513
#define OP_ALT_BIT_AND 514
#define OP_ALT_BIT_OR 515
#define OP_ALT_BIT_NOT 516
#define OP_ALT_LOGICAL_NOT 517
#define OP_ALT_NE 518
#define OP_ALT_LOGICAL_OR 519
#define OP_ALT_ASSIGN_BIT_OR 520
#define OP_ALT_BIT_PLUS 521
#define OP_ALT_ASSIGN_BIT_PLUS 522
#define INV_ALT_LOGICAL_AND 523
#define INV_ALT_ASSIGN_BIT_AND 524
#define INV_ALT_BIT_AND 525
#define INV_ALT_BIT_OR 526
#define INV_ALT_BIT_NOT 527
#define INV_ALT_LOGICAL_NOT 528
#define INV_ALT_NE 529
#define INV_ALT_LOGICAL_OR 530
#define INV_ALT_ASSIGN_BIT_OR 531
#define INV_ALT_BIT_PLUS 532
#define INV_ALT_ASSIGN_BIT_PLUS 533
#define INV_MFI_LOGICAL_AND 534
#define INV_MFI_ASSIGN_BIT_AND 535
#define INV_MFI_BIT_AND 536
#define INV_MFI_BIT_OR 537
#define INV_MFI_BIT_NOT 538
#define INV_MFI_LOGICAL_NOT 539
#define INV_MFI_NE 540
#define INV_MFI_LOGICAL_OR 541
#define INV_MFI_ASSIGN_BIT_OR 542
#define INV_MFI_BIT_PLUS 543
#define INV_MFI_ASSIGN_BIT_PLUS 544
#define DECL_REFERENCE 545
#define DECL_POINTER 546
#define DECL_VAR_ARGS 547
#define SYSTEM_HEADER_STRING 548
#define HEADER_STRING 549
#define IDENTIFIER 550
#define NON_REPLACEABLE_IDENTIFIER 551
#define MACRO_FUNCTION_IDENTIFIER 552
#define MACRO_OBJECT_IDENTIFIER 553
#define REPLACED_IDENTIFIER 554
#define PP_NUMBER 555
#define CHARACTER_LITERAL 556
#define L_CHARACTER_LITERAL 557
#define STRING_LITERAL 558
#define L_STRING_LITERAL 559
#define INTEGER_LITERAL 560
#define OCTAL_LITERAL 561
#define DECIMAL_LITERAL 562
#define HEXADECIMAL_LITERAL 563
#define FLOATING_LITERAL 564
#define UNIVERSAL_CHARACTER_NAME 565
#define USE_ON_CODE 566
#define PUNC_INITIALIZE 567
#define PUNC_SYNONYM 568
#define DONT_CARE 569
#define RESERVED_WORD 570
#define ACCESS_SPECIFIER 571
#define BOOLEAN_LITERAL 572
#define CV_QUALIFIER 573
#define INTRINSIC_TYPE 574
#define FUNCTION_SPECIFIER 575
#define STORAGE_CLASS_SPECIFIER 576
#define USER_TOKEN 577
#define SYMBOL 578
#define COMMENT 579
#define BLOCK_COMMENT 580
#define END_OF_STATEMENT 581
#define BLOCK_OPEN 582
#define BLOCK_CLOSE 583
#define LIST_OPEN 584
#define LIST_SEPARATOR 585
#define LIST_CLOSE 586




#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
typedef union YYSTYPE

{
  float fval;
  char *sval;
  unsigned int uval;
  int ival;
  long lval;
}
/* Line 1489 of yacc.c.  */

	YYSTYPE;
# define yystype YYSTYPE /* obsolescent; will be withdrawn */
# define YYSTYPE_IS_DECLARED 1
# define YYSTYPE_IS_TRIVIAL 1
#endif

extern YYSTYPE yypp_lval;

#if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
typedef struct YYLTYPE
{
  int first_line;
  int first_column;
  int last_line;
  int last_column;
} YYLTYPE;
# define yyltype YYLTYPE /* obsolescent; will be withdrawn */
# define YYLTYPE_IS_DECLARED 1
# define YYLTYPE_IS_TRIVIAL 1
#endif

extern YYLTYPE yypp_lloc;
